classdef robot_GetStateResponse < robotics.ros.Message
    %robot_GetStateResponse MATLAB implementation of robot_comm/robot_GetStateResponse
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2018 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'robot_comm/robot_GetStateResponse' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = 'fd6f79865987f34c6d348e5d59ee97c0' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        Tcp
        Ori
        Zone
        Vacuum
        Workx
        Worky
        Workz
        Workq0
        Workqx
        Workqy
        Workqz
        Toolx
        Tooly
        Toolz
        Toolq0
        Toolqx
        Toolqy
        Toolqz
        Toolm
        Toolcgx
        Toolcgy
        Toolcgz
        Toolix
        Tooliy
        Tooliz
        Ret
        Msg
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Msg', 'Ori', 'Ret', 'Tcp', 'Toolcgx', 'Toolcgy', 'Toolcgz', 'Toolix', 'Tooliy', 'Tooliz', 'Toolm', 'Toolq0', 'Toolqx', 'Toolqy', 'Toolqz', 'Toolx', 'Tooly', 'Toolz', 'Vacuum', 'Workq0', 'Workqx', 'Workqy', 'Workqz', 'Workx', 'Worky', 'Workz', 'Zone'} % List of non-constant message properties
        ROSPropertyList = {'msg', 'ori', 'ret', 'tcp', 'toolcgx', 'toolcgy', 'toolcgz', 'toolix', 'tooliy', 'tooliz', 'toolm', 'toolq0', 'toolqx', 'toolqy', 'toolqz', 'toolx', 'tooly', 'toolz', 'vacuum', 'workq0', 'workqx', 'workqy', 'workqz', 'workx', 'worky', 'workz', 'zone'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = robot_GetStateResponse(msg)
            %robot_GetStateResponse Construct the message object robot_GetStateResponse
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function tcp = get.Tcp(obj)
            %get.Tcp Get the value for property Tcp
            tcp = double(obj.JavaMessage.getTcp);
        end
        
        function set.Tcp(obj, tcp)
            %set.Tcp Set the value for property Tcp
            validateattributes(tcp, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Tcp');
            
            obj.JavaMessage.setTcp(tcp);
        end
        
        function ori = get.Ori(obj)
            %get.Ori Get the value for property Ori
            ori = double(obj.JavaMessage.getOri);
        end
        
        function set.Ori(obj, ori)
            %set.Ori Set the value for property Ori
            validateattributes(ori, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Ori');
            
            obj.JavaMessage.setOri(ori);
        end
        
        function zone = get.Zone(obj)
            %get.Zone Get the value for property Zone
            zone = int64(obj.JavaMessage.getZone);
        end
        
        function set.Zone(obj, zone)
            %set.Zone Set the value for property Zone
            validateattributes(zone, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Zone');
            
            obj.JavaMessage.setZone(zone);
        end
        
        function vacuum = get.Vacuum(obj)
            %get.Vacuum Get the value for property Vacuum
            vacuum = int64(obj.JavaMessage.getVacuum);
        end
        
        function set.Vacuum(obj, vacuum)
            %set.Vacuum Set the value for property Vacuum
            validateattributes(vacuum, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Vacuum');
            
            obj.JavaMessage.setVacuum(vacuum);
        end
        
        function workx = get.Workx(obj)
            %get.Workx Get the value for property Workx
            workx = double(obj.JavaMessage.getWorkx);
        end
        
        function set.Workx(obj, workx)
            %set.Workx Set the value for property Workx
            validateattributes(workx, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workx');
            
            obj.JavaMessage.setWorkx(workx);
        end
        
        function worky = get.Worky(obj)
            %get.Worky Get the value for property Worky
            worky = double(obj.JavaMessage.getWorky);
        end
        
        function set.Worky(obj, worky)
            %set.Worky Set the value for property Worky
            validateattributes(worky, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Worky');
            
            obj.JavaMessage.setWorky(worky);
        end
        
        function workz = get.Workz(obj)
            %get.Workz Get the value for property Workz
            workz = double(obj.JavaMessage.getWorkz);
        end
        
        function set.Workz(obj, workz)
            %set.Workz Set the value for property Workz
            validateattributes(workz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workz');
            
            obj.JavaMessage.setWorkz(workz);
        end
        
        function workq0 = get.Workq0(obj)
            %get.Workq0 Get the value for property Workq0
            workq0 = double(obj.JavaMessage.getWorkq0);
        end
        
        function set.Workq0(obj, workq0)
            %set.Workq0 Set the value for property Workq0
            validateattributes(workq0, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workq0');
            
            obj.JavaMessage.setWorkq0(workq0);
        end
        
        function workqx = get.Workqx(obj)
            %get.Workqx Get the value for property Workqx
            workqx = double(obj.JavaMessage.getWorkqx);
        end
        
        function set.Workqx(obj, workqx)
            %set.Workqx Set the value for property Workqx
            validateattributes(workqx, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workqx');
            
            obj.JavaMessage.setWorkqx(workqx);
        end
        
        function workqy = get.Workqy(obj)
            %get.Workqy Get the value for property Workqy
            workqy = double(obj.JavaMessage.getWorkqy);
        end
        
        function set.Workqy(obj, workqy)
            %set.Workqy Set the value for property Workqy
            validateattributes(workqy, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workqy');
            
            obj.JavaMessage.setWorkqy(workqy);
        end
        
        function workqz = get.Workqz(obj)
            %get.Workqz Get the value for property Workqz
            workqz = double(obj.JavaMessage.getWorkqz);
        end
        
        function set.Workqz(obj, workqz)
            %set.Workqz Set the value for property Workqz
            validateattributes(workqz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Workqz');
            
            obj.JavaMessage.setWorkqz(workqz);
        end
        
        function toolx = get.Toolx(obj)
            %get.Toolx Get the value for property Toolx
            toolx = double(obj.JavaMessage.getToolx);
        end
        
        function set.Toolx(obj, toolx)
            %set.Toolx Set the value for property Toolx
            validateattributes(toolx, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolx');
            
            obj.JavaMessage.setToolx(toolx);
        end
        
        function tooly = get.Tooly(obj)
            %get.Tooly Get the value for property Tooly
            tooly = double(obj.JavaMessage.getTooly);
        end
        
        function set.Tooly(obj, tooly)
            %set.Tooly Set the value for property Tooly
            validateattributes(tooly, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Tooly');
            
            obj.JavaMessage.setTooly(tooly);
        end
        
        function toolz = get.Toolz(obj)
            %get.Toolz Get the value for property Toolz
            toolz = double(obj.JavaMessage.getToolz);
        end
        
        function set.Toolz(obj, toolz)
            %set.Toolz Set the value for property Toolz
            validateattributes(toolz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolz');
            
            obj.JavaMessage.setToolz(toolz);
        end
        
        function toolq0 = get.Toolq0(obj)
            %get.Toolq0 Get the value for property Toolq0
            toolq0 = double(obj.JavaMessage.getToolq0);
        end
        
        function set.Toolq0(obj, toolq0)
            %set.Toolq0 Set the value for property Toolq0
            validateattributes(toolq0, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolq0');
            
            obj.JavaMessage.setToolq0(toolq0);
        end
        
        function toolqx = get.Toolqx(obj)
            %get.Toolqx Get the value for property Toolqx
            toolqx = double(obj.JavaMessage.getToolqx);
        end
        
        function set.Toolqx(obj, toolqx)
            %set.Toolqx Set the value for property Toolqx
            validateattributes(toolqx, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolqx');
            
            obj.JavaMessage.setToolqx(toolqx);
        end
        
        function toolqy = get.Toolqy(obj)
            %get.Toolqy Get the value for property Toolqy
            toolqy = double(obj.JavaMessage.getToolqy);
        end
        
        function set.Toolqy(obj, toolqy)
            %set.Toolqy Set the value for property Toolqy
            validateattributes(toolqy, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolqy');
            
            obj.JavaMessage.setToolqy(toolqy);
        end
        
        function toolqz = get.Toolqz(obj)
            %get.Toolqz Get the value for property Toolqz
            toolqz = double(obj.JavaMessage.getToolqz);
        end
        
        function set.Toolqz(obj, toolqz)
            %set.Toolqz Set the value for property Toolqz
            validateattributes(toolqz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolqz');
            
            obj.JavaMessage.setToolqz(toolqz);
        end
        
        function toolm = get.Toolm(obj)
            %get.Toolm Get the value for property Toolm
            toolm = double(obj.JavaMessage.getToolm);
        end
        
        function set.Toolm(obj, toolm)
            %set.Toolm Set the value for property Toolm
            validateattributes(toolm, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolm');
            
            obj.JavaMessage.setToolm(toolm);
        end
        
        function toolcgx = get.Toolcgx(obj)
            %get.Toolcgx Get the value for property Toolcgx
            toolcgx = double(obj.JavaMessage.getToolcgx);
        end
        
        function set.Toolcgx(obj, toolcgx)
            %set.Toolcgx Set the value for property Toolcgx
            validateattributes(toolcgx, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolcgx');
            
            obj.JavaMessage.setToolcgx(toolcgx);
        end
        
        function toolcgy = get.Toolcgy(obj)
            %get.Toolcgy Get the value for property Toolcgy
            toolcgy = double(obj.JavaMessage.getToolcgy);
        end
        
        function set.Toolcgy(obj, toolcgy)
            %set.Toolcgy Set the value for property Toolcgy
            validateattributes(toolcgy, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolcgy');
            
            obj.JavaMessage.setToolcgy(toolcgy);
        end
        
        function toolcgz = get.Toolcgz(obj)
            %get.Toolcgz Get the value for property Toolcgz
            toolcgz = double(obj.JavaMessage.getToolcgz);
        end
        
        function set.Toolcgz(obj, toolcgz)
            %set.Toolcgz Set the value for property Toolcgz
            validateattributes(toolcgz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolcgz');
            
            obj.JavaMessage.setToolcgz(toolcgz);
        end
        
        function toolix = get.Toolix(obj)
            %get.Toolix Get the value for property Toolix
            toolix = double(obj.JavaMessage.getToolix);
        end
        
        function set.Toolix(obj, toolix)
            %set.Toolix Set the value for property Toolix
            validateattributes(toolix, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Toolix');
            
            obj.JavaMessage.setToolix(toolix);
        end
        
        function tooliy = get.Tooliy(obj)
            %get.Tooliy Get the value for property Tooliy
            tooliy = double(obj.JavaMessage.getTooliy);
        end
        
        function set.Tooliy(obj, tooliy)
            %set.Tooliy Set the value for property Tooliy
            validateattributes(tooliy, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Tooliy');
            
            obj.JavaMessage.setTooliy(tooliy);
        end
        
        function tooliz = get.Tooliz(obj)
            %get.Tooliz Get the value for property Tooliz
            tooliz = double(obj.JavaMessage.getTooliz);
        end
        
        function set.Tooliz(obj, tooliz)
            %set.Tooliz Set the value for property Tooliz
            validateattributes(tooliz, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Tooliz');
            
            obj.JavaMessage.setTooliz(tooliz);
        end
        
        function ret = get.Ret(obj)
            %get.Ret Get the value for property Ret
            ret = int64(obj.JavaMessage.getRet);
        end
        
        function set.Ret(obj, ret)
            %set.Ret Set the value for property Ret
            validateattributes(ret, {'numeric'}, {'nonempty', 'scalar'}, 'robot_GetStateResponse', 'Ret');
            
            obj.JavaMessage.setRet(ret);
        end
        
        function msg = get.Msg(obj)
            %get.Msg Get the value for property Msg
            msg = char(obj.JavaMessage.getMsg);
        end
        
        function set.Msg(obj, msg)
            %set.Msg Set the value for property Msg
            msg = convertStringsToChars(msg);
            
            validateattributes(msg, {'char', 'string'}, {}, 'robot_GetStateResponse', 'Msg');
            
            obj.JavaMessage.setMsg(msg);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.Tcp = obj.Tcp;
            cpObj.Ori = obj.Ori;
            cpObj.Zone = obj.Zone;
            cpObj.Vacuum = obj.Vacuum;
            cpObj.Workx = obj.Workx;
            cpObj.Worky = obj.Worky;
            cpObj.Workz = obj.Workz;
            cpObj.Workq0 = obj.Workq0;
            cpObj.Workqx = obj.Workqx;
            cpObj.Workqy = obj.Workqy;
            cpObj.Workqz = obj.Workqz;
            cpObj.Toolx = obj.Toolx;
            cpObj.Tooly = obj.Tooly;
            cpObj.Toolz = obj.Toolz;
            cpObj.Toolq0 = obj.Toolq0;
            cpObj.Toolqx = obj.Toolqx;
            cpObj.Toolqy = obj.Toolqy;
            cpObj.Toolqz = obj.Toolqz;
            cpObj.Toolm = obj.Toolm;
            cpObj.Toolcgx = obj.Toolcgx;
            cpObj.Toolcgy = obj.Toolcgy;
            cpObj.Toolcgz = obj.Toolcgz;
            cpObj.Toolix = obj.Toolix;
            cpObj.Tooliy = obj.Tooliy;
            cpObj.Tooliz = obj.Tooliz;
            cpObj.Ret = obj.Ret;
            cpObj.Msg = obj.Msg;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Tcp = strObj.Tcp;
            obj.Ori = strObj.Ori;
            obj.Zone = strObj.Zone;
            obj.Vacuum = strObj.Vacuum;
            obj.Workx = strObj.Workx;
            obj.Worky = strObj.Worky;
            obj.Workz = strObj.Workz;
            obj.Workq0 = strObj.Workq0;
            obj.Workqx = strObj.Workqx;
            obj.Workqy = strObj.Workqy;
            obj.Workqz = strObj.Workqz;
            obj.Toolx = strObj.Toolx;
            obj.Tooly = strObj.Tooly;
            obj.Toolz = strObj.Toolz;
            obj.Toolq0 = strObj.Toolq0;
            obj.Toolqx = strObj.Toolqx;
            obj.Toolqy = strObj.Toolqy;
            obj.Toolqz = strObj.Toolqz;
            obj.Toolm = strObj.Toolm;
            obj.Toolcgx = strObj.Toolcgx;
            obj.Toolcgy = strObj.Toolcgy;
            obj.Toolcgz = strObj.Toolcgz;
            obj.Toolix = strObj.Toolix;
            obj.Tooliy = strObj.Tooliy;
            obj.Tooliz = strObj.Tooliz;
            obj.Ret = strObj.Ret;
            obj.Msg = strObj.Msg;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Tcp = obj.Tcp;
            strObj.Ori = obj.Ori;
            strObj.Zone = obj.Zone;
            strObj.Vacuum = obj.Vacuum;
            strObj.Workx = obj.Workx;
            strObj.Worky = obj.Worky;
            strObj.Workz = obj.Workz;
            strObj.Workq0 = obj.Workq0;
            strObj.Workqx = obj.Workqx;
            strObj.Workqy = obj.Workqy;
            strObj.Workqz = obj.Workqz;
            strObj.Toolx = obj.Toolx;
            strObj.Tooly = obj.Tooly;
            strObj.Toolz = obj.Toolz;
            strObj.Toolq0 = obj.Toolq0;
            strObj.Toolqx = obj.Toolqx;
            strObj.Toolqy = obj.Toolqy;
            strObj.Toolqz = obj.Toolqz;
            strObj.Toolm = obj.Toolm;
            strObj.Toolcgx = obj.Toolcgx;
            strObj.Toolcgy = obj.Toolcgy;
            strObj.Toolcgz = obj.Toolcgz;
            strObj.Toolix = obj.Toolix;
            strObj.Tooliy = obj.Tooliy;
            strObj.Tooliz = obj.Tooliz;
            strObj.Ret = obj.Ret;
            strObj.Msg = obj.Msg;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.robot_comm.robot_GetStateResponse.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.robot_comm.robot_GetStateResponse;
            obj.reload(strObj);
        end
    end
end
